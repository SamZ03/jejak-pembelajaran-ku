/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package belajar_coroutine

import kotlinx.coroutines.*
import kotlin.system.measureTimeMillis

class App {
    fun main() {
        CoroutineScope(Dispatchers.IO).launch {
            val time = measureTimeMillis {
                val result1 = async { doNetworkCall() }
                val result2 = async { doNetworkCall2() }
                println("${result1.await()} \n ${result2.await()}")
            }
            println("Done in : ${time}ms")
        }
        runBlocking {
            println("waiting")
            delay(10_000L)
            println("Finish")
        }
    }

    private suspend fun doNetworkCall(): String {
        delay(5000L)
        return "Result Network Call 1"
    }

    private suspend fun doNetworkCall2(): String {
        delay(3000L)
        return "Result Network Call 2"
    }
}

enum class ColorKu(val color: String) {
    RED("Red"),
    BLUE("Blue")
}

data class Saya(val nama: String)
class Gua(val nama: String)

fun main() {
//    App().main()
//    LatihanRetrofit().main()
//    val x = 11
//    when (x) {
//        10, 11 -> print("a")
//        11, 12 -> print("b")
//    }
    val numbers = listOf<Long>(1L, 2L)
    val numbers2 = listOf<Int>(1,2)
    val numbers3 = listOf<String>("1","2")


    println("Values: " + numbers)
    println("Values: " + numbers)
    println("Values: " + numbers)

}
