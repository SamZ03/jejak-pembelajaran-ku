/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package belajar_coroutine

import kotlinx.coroutines.*
import kotlin.system.measureTimeMillis

class App {
    fun main() {
        CoroutineScope(Dispatchers.IO).launch {
            val time = measureTimeMillis {
                val result1 = async { doNetworkCall() }
                val result2 = async { doNetworkCall2() }
                println("${result1.await()} \n ${result2.await()}")
            }
            println("Done in : ${time}ms")
        }
        runBlocking {
            println("waiting")
            delay(10_000L)
            println("Finish")
        }
    }

    private suspend fun doNetworkCall(): String {
        delay(5000L)
        return "Result Network Call 1"
    }

    private suspend fun doNetworkCall2(): String {
        delay(3000L)
        return "Result Network Call 2"
    }
}

fun main() {
//    App().main()
    LatihanRetrofit().main()
}
